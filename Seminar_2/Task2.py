'''
                        Задача 2
Дано натуральное число A > 1. Определите, каким по
счету числом Фибоначчи оно является, то есть
выведите такое число n, что φ(n)=A. Если А не
является числом Фибоначчи, выведите число -1.
Input: 5
Output: 6
Ряд чисел Фибоначчи: 
0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233,
377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, …         
'''

# Решение 1:
fib_n = int (input('Введите число > 1, для проверки на его наличие в ряде Фибоначчи: '))

fib_0 = 0  # Первое число Фибоначчи
fib_1 = 1  # Второе число Фибоначчи
fib_2 = fib_0 + fib_1 # Третье число Фибоначчи

count = 3  # Счетчик для определения, 
# какой позиции из ряда Фибоначчи является введенное число,
# начинаем считать с 3, т.к. первые 3 числа нам уже известны

while fib_2 < fib_n:
    fib_0 = fib_1
    fib_1 = fib_2
    fib_2 = fib_0 + fib_1
    count += 1

if fib_2 == fib_n:
    print(count)
else:
    print(-1)

# Решение 2:
fib_n = int (input('Введите число > 1, для проверки на его наличие в ряде Фибоначчи: '))

fib_0 = 0  # Первое число Фибоначчи
fib_1 = 1  # Второе число Фибоначчи

count = 2  # Счетчик для определения, 
# какой позиции из ряда Фибоначчи является введенное число,
# начинаем считать с 2, т.к. первые 2 числа нам уже известны

while fib_1 < fib_n:
    fib_2 = fib_0 + fib_1
    fib_0 = fib_1
    fib_1 = fib_2
    count += 1

if fib_1 == fib_n:
    print(count)
else:
    print(-1)

# Решение 3  (используя множественное присваивание):
fib_n = int (input('Введите число > 1, для проверки на его наличие в ряде Фибоначчи: '))
#пользователь минимум ввел число 2, т.к. строгое неравенство > 1

fib_0 = 1  # Первое число Фибоначчи
fib_1 = 2  # Второе число Фибоначчи

count = 4  # Счетчик для определения, 
# какой позиции из ряда Фибоначчи является введенное число,
# начинаем считать с 2, т.к. первые 2 числа нам уже известны

while fib_1 < fib_n:
    fib_0, fib_1 = fib_1, fib_0 + fib_1
    count += 1

if fib_1 == fib_n:
    print(count)
else:
    print(-1)